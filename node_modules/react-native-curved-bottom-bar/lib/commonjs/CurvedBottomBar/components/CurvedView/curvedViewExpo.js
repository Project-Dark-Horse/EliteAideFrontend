"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CurvedViewExpoComponent = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _reactNativeSvg = require("react-native-svg");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
const CurvedContainer = props => {
  const {
    style,
    width,
    height,
    bgColor,
    path,
    borderColor,
    borderWidth
  } = props;
  const border = borderWidth && borderWidth > 0 ? {
    stroke: borderColor,
    strokeWidth: borderWidth
  } : {};
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: style
  }, /*#__PURE__*/_react.default.createElement(_reactNativeSvg.Svg, {
    width: width,
    height: height
  }, /*#__PURE__*/_react.default.createElement(_reactNativeSvg.Path, _extends({
    fill: bgColor,
    d: path
  }, border))));
};
const CurvedViewExpoComponent = /*#__PURE__*/_react.default.memo(CurvedContainer);
exports.CurvedViewExpoComponent = CurvedViewExpoComponent;
//# sourceMappingURL=curvedViewExpo.js.map